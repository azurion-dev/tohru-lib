--[[
	--@ azurion_under: rewrite.
--]]


local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local PARENT = game:GetService("CoreGui")
--[[local PARENT = swift_internal_correct and game:GetService("CoreGui")
	or gethui and gethui()
	or game:GetService("CoreGui")--]]

local TohruLib = {
	Elements = {},
	ThemeObjects = {},
	Connections = {},
	Flags = {},
	Themes = {
		Default = {
			Main = Color3.fromRGB(25, 25, 25),
			Second = Color3.fromRGB(32, 32, 32),
			Stroke = Color3.fromRGB(60, 60, 60),
			Divider = Color3.fromRGB(60, 60, 60),
			Text = Color3.fromRGB(240, 240, 240),
			TextDark = Color3.fromRGB(150, 150, 150)
		}
	},
	SelectedTheme = "Default",
	Folder = nil,
	SaveCfg = false
}

--Feather Icons https://raw.githubusercontent.com/frappedevs/lucideblox/refs/heads/master/src/modules/util/icons.json - Created by 7kayoh
local Icons = {}

local Success, Response = pcall(function()
	Icons = HttpService:JSONDecode(game:HttpGetAsync("https://raw.githubusercontent.com/frappedevs/lucideblox/refs/heads/master/src/modules/util/icons.json")).icons
end)

if not Success then
	warn("\nTohru Library - Failed to load Feather Icons. Error code: " .. Response .. "\n")
end	

local function GetIcon(IconName)
	if Icons[IconName] ~= nil then
		return Icons[IconName]
	else
		return nil
	end
end   

local Tohru = Instance.new("ScreenGui")
Tohru.Name = "Tohru"
if syn then
	syn.protect_gui(Tohru)
	Tohru.Parent = game.CoreGui
else
	Tohru.Parent = gethui() or game.CoreGui
end

if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Tohru.Name and Interface ~= Tohru then
			Interface:Destroy()
		end
	end
else
	for _, Interface in ipairs(game.CoreGui:GetChildren()) do
		if Interface.Name == Tohru.Name and Interface ~= Tohru then
			Interface:Destroy()
		end
	end
end

function TohruLib:IsRunning()
	if gethui then
		return Tohru.Parent == gethui()
	else
		return Tohru.Parent == game:GetService("CoreGui")
	end

end

local function AddConnection(Signal, Function)
	if (not TohruLib:IsRunning()) then
		return
	end
	local SignalConnect = Signal:Connect(Function)
	table.insert(TohruLib.Connections, SignalConnect)
	return SignalConnect
end

task.spawn(function()
	while (TohruLib:IsRunning()) do
		wait()
	end

	for _, Connection in next, TohruLib.Connections do
		Connection:Disconnect()
	end
end)

local function AddDraggingFunctionality(DragPoint, Main)
	pcall(function()
		local Dragging, DragInput, MousePos, FramePos = false
		DragPoint.InputBegan:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				MousePos = Input.Position
				FramePos = Main.Position

				Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)
		DragPoint.InputChanged:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
				DragInput = Input
			end
		end)
		UserInputService.InputChanged:Connect(function(Input)
			if Input == DragInput and Dragging then
				local Delta = Input.Position - MousePos
				TweenService:Create(Main, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
			end
		end)
	end)
end   

local function Create(Name, Properties, Children)
	local Object = Instance.new(Name)
	for i, v in next, Properties or {} do
		Object[i] = v
	end
	for i, v in next, Children or {} do
		v.Parent = Object
	end
	return Object
end

local function CreateElement(ElementName, ElementFunction)
	TohruLib.Elements[ElementName] = function(...)
		return ElementFunction(...)
	end
end

local function MakeElement(ElementName, ...)
	local NewElement = TohruLib.Elements[ElementName](...)
	return NewElement
end

local function SetProps(Element, Props)
	table.foreach(Props, function(Property, Value)
		Element[Property] = Value
	end)
	return Element
end

local function SetChildren(Element, Children)
	table.foreach(Children, function(_, Child)
		Child.Parent = Element
	end)
	return Element
end

local function Round(Number, Factor)
	local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
	if Result < 0 then Result = Result + Factor end
	return Result
end

local function ReturnProperty(Object)
	if Object:IsA("Frame") or Object:IsA("TextButton") then
		return "BackgroundColor3"
	end 
	if Object:IsA("ScrollingFrame") then
		return "ScrollBarImageColor3"
	end 
	if Object:IsA("UIStroke") then
		return "Color"
	end 
	if Object:IsA("TextLabel") or Object:IsA("TextBox") then
		return "TextColor3"
	end   
	if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
		return "ImageColor3"
	end   
end

local function AddThemeObject(Object, Type)
	if not TohruLib.ThemeObjects[Type] then
		TohruLib.ThemeObjects[Type] = {}
	end    
	table.insert(TohruLib.ThemeObjects[Type], Object)
	Object[ReturnProperty(Object)] = TohruLib.Themes[TohruLib.SelectedTheme][Type]
	return Object
end    

local function SetTheme()
	for Name, Type in pairs(TohruLib.ThemeObjects) do
		for _, Object in pairs(Type) do
			Object[ReturnProperty(Object)] = TohruLib.Themes[TohruLib.SelectedTheme][Name]
		end    
	end    
end

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
	local Data = HttpService:JSONDecode(Config)
	table.foreach(Data, function(a,b)
		if TohruLib.Flags[a] then
			spawn(function() 
				if TohruLib.Flags[a].Type == "Colorpicker" then
					TohruLib.Flags[a]:Set(UnpackColor(b))
				else
					TohruLib.Flags[a]:Set(b)
				end    
			end)
		else
			warn("Tohru Library Config Loader - Could not find ", a ,b)
		end
	end)
end

local function SaveCfg(Name)
	local Data = {}
	for i,v in pairs(TohruLib.Flags) do
		if v.Save then
			if v.Type == "Colorpicker" then
				Data[i] = PackColor(v.Value)
			else
				Data[i] = v.Value
			end
		end	
	end
	writefile(TohruLib.Folder .. "/" .. Name .. ".txt", tostring(HttpService:JSONEncode(Data)))
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3,Enum.UserInputType.Touch}
local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

local function CheckKey(Table, Key)
	for _, v in next, Table do
		if v == Key then
			return true
		end
	end
end

CreateElement("Corner", function(Scale, Offset)
	local Corner = Create("UICorner", {
		CornerRadius = UDim.new(Scale or 0, Offset or 10)
	})
	return Corner
end)

CreateElement("Stroke", function(Color, Thickness)
	local Stroke = Create("UIStroke", {
		Color = Color or Color3.fromRGB(255, 255, 255),
		Thickness = Thickness or 1
	})
	return Stroke
end)

CreateElement("List", function(Scale, Offset)
	local List = Create("UIListLayout", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(Scale or 0, Offset or 0)
	})
	return List
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
	local Padding = Create("UIPadding", {
		PaddingBottom = UDim.new(0, Bottom or 4),
		PaddingLeft = UDim.new(0, Left or 4),
		PaddingRight = UDim.new(0, Right or 4),
		PaddingTop = UDim.new(0, Top or 4)
	})
	return Padding
end)

CreateElement("TFrame", function()
	local TFrame = Create("Frame", {
		BackgroundTransparency = 1
	})
	return TFrame
end)

CreateElement("Frame", function(Color)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	})
	return Frame
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
	local Frame = Create("Frame", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	}, {
		Create("UICorner", {
			CornerRadius = UDim.new(Scale, Offset)
		})
	})
	return Frame
end)

CreateElement("Button", function()
	local Button = Create("TextButton", {
		Text = "",
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		BorderSizePixel = 0
	})
	return Button
end)

-- 5838254768

CreateElement("ScrollFrame", function(Color, Width)
	local ScrollFrame = Create("ScrollingFrame", {
		BackgroundTransparency = 1,
		MidImage = "rbxassetid://7445543667",
		BottomImage = "rbxassetid://7445543667",
		TopImage = "rbxassetid://7445543667",
		ScrollBarImageColor3 = Color,
		BorderSizePixel = 0,
		ScrollBarThickness = Width,
		CanvasSize = UDim2.new(0, 0, 0, 0)
	})
	return ScrollFrame
end)

CreateElement("Image", function(ImageID)
	local ImageNew = Create("ImageLabel", {
		Image = ImageID,
		BackgroundTransparency = 1
	})

	if GetIcon(ImageID) ~= nil then
		ImageNew.Image = GetIcon(ImageID)
	end	

	return ImageNew
end)

CreateElement("ImageButton", function(ImageID)
	local Image = Create("ImageButton", {
		Image = ImageID,
		BackgroundTransparency = 1
	})
	return Image
end)

CreateElement("Label", function(Text, TextSize, Transparency)
	local Label = Create("TextLabel", {
		Text = Text or "",
		TextColor3 = Color3.fromRGB(240, 240, 240),
		TextTransparency = Transparency or 0,
		TextSize = TextSize or 15,
		Font = Enum.Font.Gotham,
		RichText = true,
		BackgroundTransparency = 1,
		TextXAlignment = Enum.TextXAlignment.Left
	})
	return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
	SetProps(MakeElement("List"), {
		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		SortOrder = Enum.SortOrder.LayoutOrder,
		VerticalAlignment = Enum.VerticalAlignment.Bottom,
		Padding = UDim.new(0, 5)
	})
}), {
	Position = UDim2.new(1, -25, 1, -25),
	Size = UDim2.new(0, 300, 1, -25),
	AnchorPoint = Vector2.new(1, 1),
	Parent = Tohru
})

function TohruLib:MakeNotification(NotificationConfig)
	spawn(function()
		NotificationConfig.Name = NotificationConfig.Name or "Notification"
		NotificationConfig.Content = NotificationConfig.Content or "Test"
		NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
		NotificationConfig.Time = NotificationConfig.Time or 15

		local NotificationParent = SetProps(MakeElement("TFrame"), {
			Size = UDim2.new(1, 0, 0, 0),
			AutomaticSize = Enum.AutomaticSize.Y,
			Parent = NotificationHolder
		})

		local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(25, 25, 25), 0, 10), {
			Parent = NotificationParent, 
			Size = UDim2.new(1, 0, 0, 0),
			Position = UDim2.new(1, -55, 0, 0),
			BackgroundTransparency = 0,
			AutomaticSize = Enum.AutomaticSize.Y
		}), {
			MakeElement("Stroke", Color3.fromRGB(93, 93, 93), 1.2),
			MakeElement("Padding", 12, 12, 12, 12),
			SetProps(MakeElement("Image", NotificationConfig.Image), {
				Size = UDim2.new(0, 20, 0, 20),
				ImageColor3 = Color3.fromRGB(240, 240, 240),
				Name = "Icon"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
				Size = UDim2.new(1, -30, 0, 20),
				Position = UDim2.new(0, 30, 0, 0),
				Font = Enum.Font.GothamBold,
				Name = "Title"
			}),
			SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
				Size = UDim2.new(1, 0, 0, 0),
				Position = UDim2.new(0, 0, 0, 25),
				Font = Enum.Font.GothamSemibold,
				Name = "Content",
				AutomaticSize = Enum.AutomaticSize.Y,
				TextColor3 = Color3.fromRGB(200, 200, 200),
				TextWrapped = true
			})
		})

		TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()

		wait(NotificationConfig.Time - 0.88)
		TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
		wait(0.3)
		TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
		TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.05)

		NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0),'In','Quint',0.8,true)
		wait(1.35)
		NotificationFrame:Destroy()
	end)
end    

function TohruLib:Init()
	if TohruLib.SaveCfg then	
		pcall(function()
			if isfile(TohruLib.Folder .. "/" .. game.GameId .. ".txt") then
				LoadCfg(readfile(TohruLib.Folder .. "/" .. game.GameId .. ".txt"))
				TohruLib:MakeNotification({
					Name = "Configuration",
					Content = "Auto-loaded configuration for the game " .. game.GameId .. ".",
					Time = 5
				})
			end
		end)		
	end	
end	

function TohruLib:MakeWindow(WindowConfig)
    local FirstTab = true
    local Minimized = false
    local UIHidden = false

    -- configurações padrão
    WindowConfig = WindowConfig or {}
    WindowConfig.Name           = WindowConfig.Name           or "Tohru Library"
    WindowConfig.ConfigFolder   = WindowConfig.ConfigFolder   or WindowConfig.Name
    WindowConfig.SaveConfig     = WindowConfig.SaveConfig     or false
    WindowConfig.HidePremium    = WindowConfig.HidePremium    or false
    WindowConfig.IntroEnabled   = (WindowConfig.IntroEnabled == nil) and true or WindowConfig.IntroEnabled
    WindowConfig.IntroText      = WindowConfig.IntroText      or "Tohru Library"
    WindowConfig.CloseCallback  = WindowConfig.CloseCallback  or function() end
    WindowConfig.ShowIcon       = WindowConfig.ShowIcon       or false
    WindowConfig.Icon           = WindowConfig.Icon           or "rbxassetid://5838254768"
    WindowConfig.IntroIcon      = WindowConfig.IntroIcon      or "rbxassetid://5838254768"
    WindowConfig.SearchBar      = WindowConfig.SearchBar      or false  -- ativa busca de abas

    TohruLib.Folder = WindowConfig.ConfigFolder
    TohruLib.SaveCfg = WindowConfig.SaveConfig

    -- cria pasta de config se necessário
    if WindowConfig.SaveConfig and not isfolder(WindowConfig.ConfigFolder) then
        makefolder(WindowConfig.ConfigFolder)
    end

    -- container de abas
    local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255,255,255),4), {
        Size = UDim2.new(1,0,1, -50),
    }), {
        MakeElement("List"),
        MakeElement("Padding", 8,0,0,8),
    }), "Divider")

    AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
        TabHolder.CanvasSize = UDim2.new(0,0,0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
    end)

    -- botões de fechar/minimizar
    local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5,0,1,0),
        Position = UDim2.new(0.5,0,0,0),
        BackgroundTransparency = 1,
    }), {
        AddThemeObject(SetProps(MakeElement("Image","rbxassetid://7072725342"),{
            Position = UDim2.new(0,9,0,6),
            Size = UDim2.new(0,18,0,18),
        }), "Text")
    })

    local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5,0,1,0),
        BackgroundTransparency = 1,
    }), {
        AddThemeObject(SetProps(MakeElement("Image","rbxassetid://7072719338"),{
            Position = UDim2.new(0,9,0,6),
            Size = UDim2.new(0,18,0,18),
            Name = "Ico",
        }), "Text")
    })

    local DragPoint = SetProps(MakeElement("TFrame"), {
        Size = UDim2.new(1,0,0,50),
    })

    -- painel lateral + barra de busca
    local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame",Color3.fromRGB(255,255,255),0,10),{
        Size     = UDim2.new(0,150,1,-50),
        Position = UDim2.new(0,0,0,50),
    }), {
        -- bordas e divisão
        AddThemeObject(SetProps(MakeElement("Frame"),{ Size=UDim2.new(1,0,0,10), Position=UDim2.new(0,0,0,0) }),"Second"),
        AddThemeObject(SetProps(MakeElement("Frame"),{ Size=UDim2.new(0,10,1,0), Position=UDim2.new(1,-10,0,0) }),"Second"),
        AddThemeObject(SetProps(MakeElement("Frame"),{ Size=UDim2.new(0,1,1,0), Position=UDim2.new(1,-1,0,0) }),"Stroke"),
        TabHolder,
    }),"Second")

    -- se busca ativada, monta SearchBar
    local Tabs = {}
    if WindowConfig.SearchBar then
        local SearchBox = Create("TextBox",{
            Size             = UDim2.new(1,0,1,0),
            BackgroundTransparency = 1,
            TextColor3       = Color3.fromRGB(255,255,255),
            PlaceholderColor3= Color3.fromRGB(210,210,210),
            PlaceholderText  = WindowConfig.SearchBar.Default or "🔍 Buscar abas…",
            Font             = Enum.Font.GothamBold,
            TextWrapped      = true,
            Text             = "",
            TextXAlignment   = Enum.TextXAlignment.Center,
            TextSize         = 14,
            ClearTextOnFocus = WindowConfig.SearchBar.ClearTextOnFocus or true,
        })
        local TextboxActual = AddThemeObject(SearchBox,"Text")
        local SearchBar = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame",Color3.fromRGB(255,255,255),1,6),{
            Parent    = WindowStuff,
            Size      = UDim2.new(0,130,0,24),
            Position  = UDim2.new(1.013,-12,0.075,0),
            AnchorPoint = Vector2.new(1,0.5),
        }),{
            AddThemeObject(MakeElement("Stroke"),"Stroke"),
            TextboxActual,
        }),"Main")

        local function SearchHandle()
            local txt = SearchBox.Text:lower()
            for name, btn in pairs(Tabs) do
                btn.Visible = name:lower():find(txt,1,true) ~= nil
            end
        end
        AddConnection(TextboxActual:GetPropertyChangedSignal("Text"), SearchHandle)
    end

    -- título, topo e janela principal
    local WindowName = AddThemeObject(SetProps(MakeElement("Label",WindowConfig.Name,14),{
        Size     = UDim2.new(1,-30,2,0),
        Position = UDim2.new(0,25,0,-24),
        Font     = Enum.Font.GothamBlack,
        TextSize = 20,
    }),"Text")

    local WindowTopBarLine = AddThemeObject(SetProps(MakeElement("Frame"),{
        Size     = UDim2.new(1,0,0,1),
        Position = UDim2.new(0,0,1,-1),
    }),"Stroke")

    local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame",Color3.fromRGB(255,255,255),0,10),{
        Parent   = Tohru,
        Position = UDim2.new(0.5,-307,0.5,-172),
        Size     = UDim2.new(0,615,0,344),
        ClipsDescendants = true,
    }),{
        SetChildren(SetProps(MakeElement("TFrame"),{ Size=UDim2.new(1,0,0,50), Name="TopBar" }),{
            WindowName,
            WindowTopBarLine,
            AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame",Color3.fromRGB(255,255,255),0,7),{
                Size     = UDim2.new(0,70,0,30),
                Position = UDim2.new(1,-90,0,10),
            }),{
                AddThemeObject(MakeElement("Stroke"),"Stroke"),
                AddThemeObject(SetProps(MakeElement("Frame"),{ Size=UDim2.new(0,1,1,0), Position=UDim2.new(0.5,0,0,0) }),"Stroke"),
                CloseBtn,
                MinimizeBtn,
            }),"Second"),
        }),
        DragPoint,
        WindowStuff,
    }),"Main")

    if WindowConfig.ShowIcon then
        WindowName.Position = UDim2.new(0,50,0,-24)
        local WindowIcon = SetProps(MakeElement("Image",WindowConfig.Icon),{
            Size     = UDim2.new(0,20,0,20),
            Position = UDim2.new(0,25,0,15),
        })
        WindowIcon.Parent = MainWindow.TopBar
    end

    -- arrastar, ocultar/reabrir com RightControl
    AddDraggingFunctionality(DragPoint, MainWindow)
    AddConnection(UserInputService.InputBegan, function(inp)
        if inp.KeyCode == Enum.KeyCode.RightControl then
            MainWindow.Visible = not MainWindow.Visible
            UIHidden = not MainWindow.Visible
            TohruLib:MakeNotification({
                Name    = UIHidden and "🔒 Interface Hidden" or "🔓 Interface Shown",
                Content = UIHidden and "Press Right Control to open." or "Press Right Control to hide.",
                Time    = 5,
            })
        end
    end)

    -- minimizar
    AddConnection(MinimizeBtn.MouseButton1Up, function()
        if Minimized then
            TweenService:Create(MainWindow, TweenInfo.new(.5,Enum.EasingStyle.Quint,Enum.EasingDirection.Out),{Size=UDim2.new(0,615,0,344)}):Play()
            MinimizeBtn.Ico.Image = "rbxassetid://7072719338"
            wait(.02)
            MainWindow.ClipsDescendants = false
            WindowStuff.Visible = true
            WindowTopBarLine.Visible = true
        else
            MainWindow.ClipsDescendants = true
            WindowTopBarLine.Visible = false
            MinimizeBtn.Ico.Image = "rbxassetid://7072720870"
            TweenService:Create(MainWindow, TweenInfo.new(.5,Enum.EasingStyle.Quint,Enum.EasingDirection.Out),{
                Size = UDim2.new(0, WindowName.TextBounds.X+140, 0, 50)
            }):Play()
            wait(.1)
            WindowStuff.Visible = false
        end
        Minimized = not Minimized
    end)

    -- sequência de introdução
    local function LoadSequence()
        MainWindow.Visible = false
        local logo = SetProps(MakeElement("Image",WindowConfig.IntroIcon),{
            Parent = Tohru, AnchorPoint = Vector2.new(0.5,0.5),
            Position = UDim2.new(0.5,0,0.4,0),
            Size = UDim2.new(0,28,0,28),
            ImageTransparency = 1,
        })
        local txt = SetProps(MakeElement("Label",WindowConfig.IntroText,14),{
            Parent = Tohru, AnchorPoint = Vector2.new(0.5,0.5),
            Position = UDim2.new(0.5,19,0.5,0),
            TextTransparency = 1,
        })
        TweenService:Create(logo, TweenInfo.new(.3),{ImageTransparency=0}):Play(); wait(.8)
        TweenService:Create(logo, TweenInfo.new(.3),{Position=UDim2.new(0.5,-(txt.TextBounds.X/2),0.5,0)}):Play(); wait(.3)
        TweenService:Create(txt, TweenInfo.new(.3),{TextTransparency=0}):Play(); wait(2)
        TweenService:Create(txt, TweenInfo.new(.3),{TextTransparency=1}):Play()
        MainWindow.Visible = true
        logo:Destroy(); txt:Destroy()
    end
    if WindowConfig.IntroEnabled then LoadSequence() end

    -- retorno: função para criar abas
    local TabFunction = {}
    function TabFunction:MakeTab(TabConfig)
        TabConfig = TabConfig or {}
        local name = TabConfig.Name or "Tab"
        local ico  = TabConfig.Icon or ""
        local pOnly= TabConfig.PremiumOnly or false

        -- botão da aba
        local TabFrame = SetChildren(SetProps(MakeElement("Button"),{
            Size = UDim2.new(1,0,0,30), Parent = TabHolder
        }),{
            AddThemeObject(SetProps(MakeElement("Image", ico),{
                AnchorPoint = Vector2.new(0,0.5), Size=UDim2.new(0,18,0,18),
                Position=UDim2.new(0,10,0.5,0), ImageTransparency=0.4, Name="Ico"
            }),"Text"),
            AddThemeObject(SetProps(MakeElement("Label", name,14),{
                Size=UDim2.new(1,-35,1,0), Position=UDim2.new(0,35,0,0),
                Font=Enum.Font.GothamSemibold, TextTransparency=0.4, Name="Title"
            }),"Text"),
        })

        -- registra para busca
        Tabs[name] = TabFrame

        -- ícone custom
        if GetIcon(ico) then TabFrame.Ico.Image = GetIcon(ico) end

        -- container de itens
        local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame",Color3.fromRGB(255,255,255),5),{
            Size=UDim2.new(1,-150,1,-50), Position=UDim2.new(0,150,0,50),
            Parent = MainWindow, Visible=false, Name="ItemContainer"
        }),{
            MakeElement("List",0,6),
            MakeElement("Padding",15,10,10,15),
        }),"Divider")
        AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
            Container.CanvasSize = UDim2.new(0,0,0,Container.UIListLayout.AbsoluteContentSize.Y+30)
        end)

        -- primeira aba aberta
        if FirstTab then
            FirstTab = false
            TabFrame.Ico.ImageTransparency = 0
            TabFrame.Title.TextTransparency = 0
            TabFrame.Title.Font = Enum.Font.GothamBlack
            Container.Visible = true
        end

        -- evento de clique para alternar abas
        AddConnection(TabFrame.MouseButton1Click, function()
            for _,b in ipairs(TabHolder:GetChildren()) do
                if b:IsA("TextButton") then
                    b.Title.Font = Enum.Font.GothamSemibold
                    TweenService:Create(b.Ico,TweenInfo.new(.25),{ImageTransparency=0.4}):Play()
                    TweenService:Create(b.Title,TweenInfo.new(.25),{TextTransparency=0.4}):Play()
                end
            end
            for _,c in ipairs(MainWindow:GetChildren()) do
                if c.Name=="ItemContainer" then c.Visible=false end
            end
            TweenService:Create(TabFrame.Ico,TweenInfo.new(.25),{ImageTransparency=0}):Play()
            TweenService:Create(TabFrame.Title,TweenInfo.new(.25),{TextTransparency=0}):Play()
            TabFrame.Title.Font = Enum.Font.GothamBlack
            Container.Visible = true
        end)

        -- coleta das funções de elemento...
        local function GetElements(parent)
            local F = {}
            -- aqui entram AddButton, AddToggle, etc...
            -- mantenha exatamente como sua biblioteca original
            return F
        end

        local ElementFunction = GetElements(Container)

        -- bloqueia se PremiumOnly
        if pOnly then
            for k,v in pairs(ElementFunction) do
                ElementFunction[k] = function() end
            end
            Container:FindFirstChild("UIListLayout"):Destroy()
            Container:FindFirstChild("UIPadding"):Destroy()
            -- mensagem de aba premium...
        end

        return ElementFunction
    end

    return TabFunction
end

function TohruLib:Destroy()
	Tohru:Destroy()
end

function TohruLib:ToggleUi()
	Tohru.Enabled = not Tohru.Enabled
end

return TohruLib
